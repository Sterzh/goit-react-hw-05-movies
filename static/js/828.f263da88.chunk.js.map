{"version":3,"file":"static/js/828.f263da88.chunk.js","mappings":"mPAoHA,UAxGsB,WAAO,IAAD,IACpBA,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAmBC,EAAAA,EAAAA,QAAM,UAACN,EAASO,aAAV,aAAC,EAAgBC,MAC1CC,GAASC,EAAAA,EAAAA,MAAYC,SA+B3B,OA7BAC,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdT,EAAkB,CAAC,IAENU,EAFK,mCAEpB,+GAE2BC,EAAAA,EAAAA,IAAA,UAfhB,gCAegB,gBACEL,IADF,OAdd,8CAYb,OAEUI,EAFV,OAKUV,EAAY,CAChBY,GAAIF,EAASG,KAAKD,GAClBE,eAAgBJ,EAASG,KAAKC,eAC9BC,OAAQL,EAASG,KAAKE,OACnBC,KAAI,SAAAC,GACH,OAAOA,EAAEC,IACV,IACAC,KAAK,KACRC,SAAUV,EAASG,KAAKO,SACxBC,aAAcX,EAASG,KAAKQ,aAC5BC,YAAaZ,EAASG,KAAKS,YAC3BC,cAA4C,GAA7Bb,EAASG,KAAKU,cAAmBC,QAAQ,IAE1DvB,EAAaD,GAlBjB,gDAoBIyB,QAAQC,IAAR,MApBJ,yDAFoB,qDACpBhB,GAwBD,CACF,GAAE,CAACb,EAAUG,EAAWM,KAGvB,8BACiB,KAAdN,GACC,+BACE,gBAAK2B,UAAU,sBAAf,yEAKF,iCACE,iBAAKA,UAAU,YAAf,WACE,UAAC,KAAD,CAAMC,GAAE,UAAE1B,EAAiB2B,eAAnB,QAA8B,IAAKF,UAAU,WAArD,WACE,SAAC,MAAD,IADF,eAGA,iBAAKA,UAAU,gBAAf,WACE,gBACEG,IAC4B,OAA1B9B,EAAUsB,YAtDJ,kCAuDgBtB,EAAUsB,YAC5BS,EAENC,IAAKhC,EAAUc,eACfmB,MAAO,OAET,iBAAKN,UAAU,gBAAf,WACE,0BACG3B,EAAUc,eADb,KAE8B,KAA3Bd,EAAUqB,aACPrB,EAAUqB,aACV,uBAJN,OAO4B,IAA3BrB,EAAUuB,cACT,wCAAgBvB,EAAUuB,aAA1B,QAEA,2DAEF,sCACA,uBAC0B,KAAvBvB,EAAUoB,SACPpB,EAAUoB,SACV,sBAEN,oCACA,uBACwB,KAArBpB,EAAUe,OAAgBf,EAAUe,OAAS,4BAKtD,gBAAIY,UAAU,gBAAd,WACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,0BACE,SAAC,EAAAM,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,YAOb,C","sources":["pages/MoviesDetails.jsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport NoImageAVailable from '../images/No_Image_Available.jpg';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst MY_API_KEY = '?api_key=c511c78146d5adcdbcb48d13d0273853';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MoviesDetails = () => {\n  const location = useLocation();\n  const [movieInfo, setMovieInfo] = useState('');\n  const backLinkLocation = useRef(location.state?.from);\n  const params = useParams().moviesId;\n\n  useEffect(() => {\n    if (movieInfo === '') {\n      response();\n      async function response() {\n        try {\n          const response = await axios.get(\n            `${BASE_URL}${`movie/${params}`}${MY_API_KEY}`\n          );\n          const movieInfo = {\n            id: response.data.id,\n            original_title: response.data.original_title,\n            genres: response.data.genres\n              .map(e => {\n                return e.name;\n              })\n              .join(' '),\n            overview: response.data.overview,\n            release_date: response.data.release_date,\n            poster_path: response.data.poster_path,\n            vote_average: (response.data.vote_average * 10).toFixed(2),\n          };\n          setMovieInfo(movieInfo);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  }, [location, movieInfo, params]);\n\n  return (\n    <>\n      {movieInfo === '' ? (\n        <>\n          <div className=\"trendingMoviesError\">\n            Request error. Change the request or go to the main page\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"movieInfo\">\n            <Link to={backLinkLocation.current ?? '/'} className=\"backLink\">\n              <BsArrowLeftShort /> Go back\n            </Link>\n            <div className=\"movieInfoCard\">\n              <img\n                src={\n                  movieInfo.poster_path !== null\n                    ? IMAGES_BASE_URL + movieInfo.poster_path\n                    : NoImageAVailable\n                }\n                alt={movieInfo.original_title}\n                width={300}\n              />\n              <div className=\"movieInfoText\">\n                <h2>\n                  {movieInfo.original_title} (\n                  {movieInfo.release_date !== ''\n                    ? movieInfo.release_date\n                    : 'no release_date data'}\n                  )\n                </h2>\n                {movieInfo.vote_average !== 0 ? (\n                  <p>User Score: {movieInfo.vote_average}%</p>\n                ) : (\n                  <p>User Score: no User Score data</p>\n                )}\n                <h3>Owerview</h3>\n                <p>\n                  {movieInfo.overview !== ''\n                    ? movieInfo.overview\n                    : 'No overview data'}\n                </p>\n                <h3>Genres</h3>\n                <p>\n                  {movieInfo.genres !== '' ? movieInfo.genres : 'No genre data'}\n                </p>\n              </div>\n            </div>\n          </div>\n          <ul className=\"movieInfoLink\">\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <div>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["location","useLocation","useState","movieInfo","setMovieInfo","backLinkLocation","useRef","state","from","params","useParams","moviesId","useEffect","response","axios","id","data","original_title","genres","map","e","name","join","overview","release_date","poster_path","vote_average","toFixed","console","log","className","to","current","src","NoImageAVailable","alt","width","Suspense","fallback"],"sourceRoot":""}